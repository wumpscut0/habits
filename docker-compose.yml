services:
  api:
    depends_on:
      - postgres
    build:
      context: server
    ports:
      - "8000"
    networks:
      - bridge
    environment:
      JWT: 9565157d0e36f3e9c1c334666899186f3d1aaa5b3fbee105412c4344cd83b1e8
      CIPHER: 0hVakjHd7dL07Ndtb0wTcaJQPx2HwlAgpbIQzhW2rEU=
      DATABASE: postgresql+asyncpg://postgres:postgres@postgres:5432
      API_KEY: my_api_key
      UVICORN_IP: 0.0.0.0
      UVICORN_PORT: 8000
  bot:
    ports:
      - "80:80"
    depends_on:
      - redis
      - api
    build:
      context: client
    environment:
      TOKEN: my_token
      JWT: 9565157d0e36f3e9c1c334666899186f3d1aaa5b3fbee105412c4344cd83b1e8
      SMTP_PASSWORD: my_smtp_password
      ORGANIZATION_EMAIL: my_email
      API_KEY: my_api_key
      CIPHER: 0hVakjHd7dL07Ndtb0wTcaJQPx2HwlAgpbIQzhW2rEU=
      GROUP_ID: my_group_id
      BACKEND: http://api:8000
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - bridge

  postgres:
    image: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_DB: habits
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    networks:
      - bridge
    volumes:
      - pg_data:/var/lib/postgresql/data
  redis:
    image: redis
    ports:
      - "6379"
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - bridge


volumes:
  pg_data:
    driver: local
  redis_data:
    driver: local

networks:
   bridge:
     driver: bridge
